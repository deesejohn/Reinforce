# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pr:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
- script: |
    dotnet tool install --tool-path . nbgv
    ./nbgv cloud
  displayName: Set BuildNumber

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'deesejohn'
    scannerMode: 'MSBuild'
    projectKey: 'deesejohn_Reinforce'
    projectVersion: '$(Build.BuildNumber)'
  displayName: SonarCloud Prepare

- task: DotNetCoreCLI@2
  inputs:
    command: build
    arguments: -c $(BuildConfiguration)
  displayName: Build

- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: 'tests/**/*.csproj'
    arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura'
  displayName: Unit Tests

- script: |
    dotnet tool install --tool-path . dotnet-reportgenerator-globaltool
    ./reportgenerator -reports:$(Agent.TempDirectory)/tests/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/CodeCoverage -reporttypes:'HtmlInline_AzurePipelines;Cobertura'
  displayName: Create Code Coverage Report

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Build.SourcesDirectory)/CodeCoverage/Cobertura.xml'
    reportDirectory: '$(Build.SourcesDirectory)/CodeCoverage'
  displayName: Publish Code Coverage

- task: SonarCloudAnalyze@1
  displayName: SonarCloud Analyze

- task: DotNetCoreCLI@2
  inputs:
    command: pack
    packagesToPack: src/**/*.csproj
    configuration: $(BuildConfiguration)
    packDirectory: $(Build.ArtifactStagingDirectory)
    nobuild: true
    verbosityPack: Minimal
  displayName: Pack

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  displayName: Publish Artifacts